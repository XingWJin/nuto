language: cpp
sudo: required
dist: trusty
services: docker
os: linux

# notifications in riot.im
notifications:
  webhooks:
      urls:
          - "https://scalar.vector.im/api/neb/services/hooks/dHJhdmlzLWNpLyU0MFBzaXJ1cyUzQW1hdHJpeC5vcmcvJTIxZG9KWEFCclp5VVBlV0Jmb0ZYJTNBbWF0cml4Lm9yZw"
      on_success: change  # always|never|change
      on_failure: always
      on_start: never

env:
  global:
    - COVERAGE=FALSE
    - BUILD_DIR="$TRAVIS_BUILD_DIR/build"
    - CMAKE_FLAGS="-DENABLE_OPENMP=TRUE -DENABLE_COVERAGE=FALSE -DENABLE_EXAMPLES=FALSE -DENABLE_METAMODEL=TRUE -DENABLE_OPTIMIZE=TRUE -DENABLE_ARPACK=TRUE -DENABLE_GEOMETRYCONCRETE=TRUE -DENABLE_MPI=TRUE"

jobs:
  include:
      # test stage
    - stage: Test
      compiler: clang++
      env: CI_TARGET=test CMAKE_FLAGS="$CMAKE_FLAGS -DCMAKE_BUILD_TYPE=Release -DENABLE_EXAMPLES=TRUE"
    - compiler: g++
      env: CI_TARGET=test CXX=g++-6 CMAKE_FLAGS="${CMAKE_FLAGS} -DCMAKE_BUILD_TYPE=Release -DENABLE_EXAMPLES=TRUE"
    - compiler: g++
      env: CI_TARGET=test CMAKE_FLAGS="$CMAKE_FLAGS -DCMAKE_BUILD_TYPE=Debug"
    - compiler: g++
      env: CI_TARGET=test COVERAGE=TRUE CMAKE_FLAGS="$CMAKE_FLAGS -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=TRUE"
      # lint
    - env: CI_TARGET=lint
  allow_failures:
    - env: CI_TARGET=lint
  fast_finish: true

before_install: eval ${CXX}

install: ci/install.sh

before_script: ci/before_script.sh

script: ci/script.sh

after_success:
    - cd ..
    - ./scripts/upload_coverage.sh

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-4.0
    packages:
      - build-essential
      - clang++-4.0
      - g++-6
