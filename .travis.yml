language: cpp
sudo: false
services: docker
dist: trusty

notifications:
    webhooks:
        urls:
            - "https://scalar.vector.im/api/neb/services/hooks/dHJhdmlzLWNpLyU0MFBzaXJ1cyUzQW1hdHJpeC5vcmcvJTIxZG9KWEFCclp5VVBlV0Jmb0ZYJTNBbWF0cml4Lm9yZw"
        on_success: change  # always|never|change
        on_failure: always
        on_start: never
compiler:
    - clang
    - gcc
env:
    - BUILD_TYPE=Release OPENMP=TRUE  COVERAGE=FALSE EXAMPLES=TRUE
    - BUILD_TYPE=Release OPENMP=FALSE COVERAGE=FALSE EXAMPLES=TRUE
    - BUILD_TYPE=Debug   OPENMP=FALSE COVERAGE=TRUE  EXAMPLES=FALSE
matrix:
    exclude:
        - compiler: clang
          env: BUILD_TYPE=Debug   OPENMP=FALSE COVERAGE=TRUE  EXAMPLES=FALSE
before_install:
    # request codecov to detect CI environment to pass through to docker
    # https://docs.codecov.io/docs/testing-with-docker
    - ci_env=`bash <(curl -s https://codecov.io/env)`
    - echo $ci_env

    - docker pull nuto/nuto_docker:v2
    - docker run $ci_env -itd --name dock -v $(pwd):/project nuto/nuto_docker:v2
script:
    - MODULES="-DENABLE_METAMODEL=TRUE -DENABLE_OPTIMIZE=TRUE -DENABLE_ARPACK=TRUE -DENABLE_GEOMETRYCONCRETE=TRUE -DENABLE_MPI=TRUE"
    - BUILD_OPTIONS="-DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_OPENMP=$OPENMP -DENABLE_COVERAGE=$COVERAGE -DENABLE_EXAMPLES=$EXAMPLES $MODULES"
    - docker exec dock mkdir build && cd build
    - docker exec dock cmake $BUILD_OPTIONS ../project
    - docker exec dock make -j2 unit
    - docker exec dock make -j2
    - docker exec dock ctest --output-on-failure

after_success:
    - cd ..
    - sh scripts/upload_coverage.sh
